# Generated by Django 2.1.2 on 2020-07-03 14:02

import Main.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ActorId', models.CharField(blank=True, editable=False, max_length=50, unique=True, verbose_name='演员id')),
                ('ActorName', models.CharField(max_length=50, verbose_name='演员姓名')),
                ('ActorArea', models.CharField(blank=True, default='未知', max_length=50, verbose_name='演员地区')),
                ('ActorSex', models.SmallIntegerField(choices=[(1, '男'), (2, '女'), (3, '未知')], default=3, verbose_name='演员性别')),
            ],
            options={
                'verbose_name': '演员信息',
                'verbose_name_plural': '演员信息',
            },
        ),
        migrations.CreateModel(
            name='ActorConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ActorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.Actor', to_field='ActorId', verbose_name='演员id')),
            ],
            options={
                'verbose_name': '参演信息',
                'verbose_name_plural': '参演信息',
            },
        ),
        migrations.CreateModel(
            name='Agree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecordId', models.CharField(blank=True, editable=False, max_length=100, unique=True, verbose_name='实体id')),
                ('TargetId', models.CharField(max_length=50, verbose_name='目标id')),
                ('RecordTime', models.DateTimeField(auto_now_add=True)),
                ('AgreeType', models.PositiveSmallIntegerField(choices=[(1, '评论'), (2, '标签')], verbose_name='点赞类型')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EditRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecordId', models.CharField(blank=True, editable=False, max_length=100, unique=True, verbose_name='实体id')),
                ('TargetId', models.CharField(max_length=50, verbose_name='目标id')),
                ('RecordTime', models.DateTimeField(auto_now_add=True)),
                ('EditType', models.PositiveSmallIntegerField(choices=[(1, '修改信息'), (2, '添加标签')], verbose_name='编辑类型')),
                ('EditContent', models.TextField(verbose_name='修改内容')),
            ],
            options={
                'verbose_name': '编辑记录',
                'verbose_name_plural': '编辑记录',
            },
        ),
        migrations.CreateModel(
            name='FavoriteRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecordId', models.CharField(blank=True, editable=False, max_length=100, unique=True, verbose_name='实体id')),
                ('TargetId', models.CharField(max_length=50, verbose_name='目标id')),
                ('RecordTime', models.DateTimeField(auto_now_add=True)),
                ('FavoriteType', models.PositiveSmallIntegerField(choices=[(1, '电影')], default=1, verbose_name='收藏类型')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IDCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=20, unique=True, verbose_name='id类型')),
                ('Count', models.PositiveIntegerField(default=0, editable=False, verbose_name='计数')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MovId', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('MovName', models.CharField(max_length=100, verbose_name='电影标题')),
                ('MovType', models.IntegerField(verbose_name='电影类型')),
                ('MovLength', models.IntegerField(default=0, verbose_name='电影时长')),
                ('MovImg', models.ImageField(default='static/cover/default_cover.bmp', upload_to=Main.models.cover_directory_path, verbose_name='电影封面')),
                ('MovOrigin', models.SmallIntegerField(default=16, verbose_name='电影产地')),
                ('MovCompany', models.CharField(default='未知', max_length=100, verbose_name='电影公司')),
                ('MovDirector', models.CharField(default='未知', max_length=100, verbose_name='电影导演')),
                ('MovDescription', models.TextField(default='无', verbose_name='电影描述')),
                ('MovDate', models.DateField(default=1, verbose_name='电影上映时间')),
                ('MovLanguage', models.CharField(default='未知', max_length=50, verbose_name='电影语言')),
                ('MovScore', models.FloatField(default=0.0, verbose_name='电影平均分')),
                ('MovScoreCount', models.IntegerField(default=0, verbose_name='评分人数')),
                ('MovImdbId', models.IntegerField(default=0, verbose_name='IMDB')),
                ('MovTmdbId', models.IntegerField(default=0, verbose_name='TMDB')),
            ],
            options={
                'verbose_name': '电影信息',
                'verbose_name_plural': '电影信息',
            },
        ),
        migrations.CreateModel(
            name='MovieTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MovTagId', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('MovTagCnt', models.CharField(max_length=20, unique=True, verbose_name='标签内容')),
            ],
            options={
                'verbose_name': '电影标签',
                'verbose_name_plural': '电影标签',
            },
        ),
        migrations.CreateModel(
            name='MovTagConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AgreeCount', models.PositiveIntegerField(default=0, editable=False, verbose_name='点赞数')),
                ('MovId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.Movie', to_field='MovId', verbose_name='电影id')),
                ('MovTagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.MovieTag', to_field='MovTagId', verbose_name='标签id')),
            ],
            options={
                'verbose_name': '标签联系信息',
                'verbose_name_plural': '标签联系信息',
            },
        ),
        migrations.CreateModel(
            name='ReplyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecordId', models.CharField(blank=True, editable=False, max_length=100, unique=True, verbose_name='实体id')),
                ('TargetId', models.CharField(max_length=50, verbose_name='目标id')),
                ('RecordTime', models.DateTimeField(auto_now_add=True)),
                ('ReplyType', models.PositiveSmallIntegerField(choices=[(1, '电影'), (2, '评论')], verbose_name='回复类型')),
                ('ReplyGrade', models.SmallIntegerField(blank=True, null=True, verbose_name='评分')),
                ('ReplyContent', models.TextField(verbose_name='回复内容')),
                ('AgreeCount', models.PositiveIntegerField(default=0, editable=False, verbose_name='点赞数')),
            ],
            options={
                'verbose_name': '评论记录',
                'verbose_name_plural': '评论记录',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(blank=True, editable=False, max_length=30, unique=True, verbose_name='用户id')),
                ('UserPwd', models.CharField(max_length=20, verbose_name='密码')),
                ('UserName', models.CharField(max_length=30, unique=True, verbose_name='用户名')),
                ('UserLevel', models.SmallIntegerField(default=1, verbose_name='用户等级')),
                ('UserCurExp', models.SmallIntegerField(default=0, verbose_name='用户当前经验')),
                ('UserMaxExp', models.SmallIntegerField(default=1000, verbose_name='用户最大经验')),
                ('Email', models.EmailField(max_length=254)),
                ('HasView', models.BooleanField(default=False, verbose_name='是否有过浏览记录')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
        ),
        migrations.CreateModel(
            name='ViewRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecordId', models.CharField(blank=True, editable=False, max_length=100, unique=True, verbose_name='实体id')),
                ('TargetId', models.CharField(max_length=50, verbose_name='目标id')),
                ('RecordTime', models.DateTimeField(auto_now_add=True)),
                ('UserId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.User', to_field='UserId', verbose_name='用户id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='replyrecord',
            name='UserId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.User', to_field='UserId', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='favoriterecord',
            name='UserId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.User', to_field='UserId', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='editrecord',
            name='UserId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.User', to_field='UserId', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='agree',
            name='UserId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.User', to_field='UserId', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='actorconnection',
            name='MovId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.Movie', to_field='MovId', verbose_name='电影id'),
        ),
        migrations.AlterIndexTogether(
            name='viewrecord',
            index_together={('UserId', 'TargetId')},
        ),
        migrations.AlterUniqueTogether(
            name='movtagconnection',
            unique_together={('MovTagId', 'MovId')},
        ),
        migrations.AlterIndexTogether(
            name='movtagconnection',
            index_together={('MovTagId', 'MovId')},
        ),
        migrations.AlterIndexTogether(
            name='favoriterecord',
            index_together={('UserId', 'TargetId')},
        ),
        migrations.AlterIndexTogether(
            name='agree',
            index_together={('UserId', 'TargetId')},
        ),
        migrations.AlterUniqueTogether(
            name='actorconnection',
            unique_together={('ActorId', 'MovId')},
        ),
        migrations.AlterIndexTogether(
            name='actorconnection',
            index_together={('ActorId', 'MovId')},
        ),
    ]
